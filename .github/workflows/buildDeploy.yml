name: Build and deploy Chewie docker image

on: 

  workflow_dispatch: # Allows manual workflow trigger
  push: # Auto trigger on push to master
    branches:
       - master

# Set global env variables
env:
  AWS_REGION: eu-west-2
  ECR_REPOSITORY: chewie
  IMAGE_TAG: ${{ github.sha }}
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

jobs:

  # # Build chewie and push to AWS ECR
  buildAndPush:

    runs-on: ubuntu-latest

    steps:

      - name: Cancel Previous Runs               
        uses: styfle/cancel-workflow-action@0.4.1
        with:                                    
          access_token: ${{ github.token }}

      - name: Echo Env Vars through Context
        run: |
          echo "$GITHUB_CONTEXT"                 

      - name: Configure AWS credentials                          
        uses: aws-actions/configure-aws-credentials@v1           
        with:                                                    
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}        
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR            
        id: login-ecr                        
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Checkout                                  
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ${{ github.workspace }}
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
      
      - uses: sarisia/actions-status-discord@c193626e5ce172002b8161e116aa897de7ab5383
        if: always()
        with:
          webhook: ${{ env.DISCORD_WEBHOOK }}
  
  deployQA:

    needs: buildAndPush

    runs-on: ubuntu-latest

    env:
      NAMESPACE: chewie
      KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}

    steps:

    - name: Configure AWS credentials                          
      uses: aws-actions/configure-aws-credentials@v1           
      with:                                                    
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}        
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy to Kubernetes cluster                                                                            
      uses: kodermax/kubectl-aws-eks@c18ef8acdb80d5311a7dd3611c57fcc70e954b37                                                                            
      env:                                                                                                          
        RELEASE_IMAGE: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
      with:                                                                                                         
        args: set image deployment/gitbutler chewie=${{ env.RELEASE_IMAGE }} --record -n $NAMESPACE
          
    - name: Verify Kubernetes deployment                               
      uses: kodermax/kubectl-aws-eks@c18ef8acdb80d5311a7dd3611c57fcc70e954b37                              
      with:                                                            
        args: rollout status deployment/gitbutler -n $NAMESPACE
    
    - uses: sarisia/actions-status-discord@c193626e5ce172002b8161e116aa897de7ab5383
      if: always()
      with:
        webhook: ${{ env.DISCORD_WEBHOOK }}
